name: 'AppImage bash'
description: 'Used to generate AppImage packages'
author: 'valicm'
branding:
  icon: activity
  color: white
inputs:
  version_url:
    description: 'URL of tar.gz to download'
    required: true
  version_file:
    description: 'File where is stored version string'
    required: true
  version_icon:
    description: 'Name of the app icon'
    required: true
  version_directory:
    description: 'If specific directory is required'
    required: false
  version_bash:
    description: 'Adding regular expression if needed to get version string from version file'
    required: false
  version_check:
    description: 'If the version of the app needs to be checked'
    required: true
    default: 'verify'
  version_only:
    description: 'If we need only version and then stop execution'
    required: true
    default: 'update'
outputs:
  app_update_needed:
    value: 'true'
    description: 'Decision if the AppImage needs to be updated'
runs:
  using: "composite"
  steps:
    - run: echo "INPUT_VERSION_URL=${{ inputs.version_url }}" >> $GITHUB_ENV
      shell: bash
    - run: echo "INPUT_VERSION_FILE=${{ inputs.version_file }}" >> $GITHUB_ENV
      shell: bash
    - run: echo "INPUT_VERSION_ICON=${{ inputs.version_icon }}" >> $GITHUB_ENV
      shell: bash
    - run: echo "INPUT_VERSION_DIRECTORY=${{ inputs.version_directory }}" >> $GITHUB_ENV
      shell: bash
    - run: echo "INPUT_VERSION_BASH=${{ inputs.version_bash }}" >> $GITHUB_ENV
      shell: bash
    - run: echo "INPUT_VERSION_CHECK=${{ inputs.version_check }}" >> $GITHUB_ENV
      shell: bash
    - run: echo "INPUT_VERSION_ONLY=${{ inputs.version_only }}" >> $GITHUB_ENV
      shell: bash
    - run: chmod +x ${{ github.action_path }}/build.sh
      shell: bash
    - run: $GITHUB_ACTION_PATH/build.sh
      shell: bash
